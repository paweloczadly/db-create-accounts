apply from: 'build.gradle'

import groovy.sql.Sql

task createUsersTest(dependsOn: loadDriver) << {
	onUsers(project.mysqlJdbcUrl) {
		assert it.containsAll(users.split(',')), "Users ${users.split(',') - it} does not exist in $dburl"
	}
}

task removeUsersTest(dependsOn: loadDriver) << {
	onUsers(project.mysqlJdbcUrl) {
		assert !it.containsAll(users.split(',')), "Users ${it.intersect(users.split(',') as List)} exist in $dburl"
	}
}

task createSchemaTest(dependsOn: loadDriver) << {
	onSchema("Schemas $schema does not exist in $dburl") { sql -> sql.connection.metaData }
}

task removeSchemaTest(dependsOn: loadDriver) << {
	onSchema("Schemas $schema exist in $dburl") { sql -> !sql.connection.metaData }
}

def onUsers(jdbcUrl, closure) {
	def sql = Sql.newInstance(jdbcUrl, admin, adminpass)
	def users = sql.dataSet('mysql.user').rows().collect { it.User }
	closure(users)
}

def onSchema(message, closure) {
	def sql = Sql.newInstance("$dburl/$schema", admin, adminpass)
	assert closure(sql), message
}