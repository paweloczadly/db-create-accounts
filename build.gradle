import groovy.sql.Sql

repositories {
    flatDir {
        dirs 'lib'
    }
}

configurations {
    driver
}

dependencies {
	driver fileTree('lib')
}

ext {
	// jdbc urls:
	mysqlJdbcUrl = "jdbc:mysql://${dburl}:3306"
	mssqlUrl 	 = "jdbc:sqlserver://${dburl}:1433"

	// jdbc passwords:
	mysqlClass = 'com.mysql.jdbc.Driver'
	oracleClass = 'oracle.jdbc.OracleDriver'
	sqlserverClass = 'com.microsoft.sqlserver.jdbc.SQLServerDriver'
	hanaClass = 'com.sap.db.jdbc.Driver'
}

configurations.driver.each {
	GroovyObject.class.classLoader.addURL it.toURL()
}

task loadDriver << {
	Class.forName(project."${db}Class")
}

task createUsers(dependsOn: loadDriver) << {
	execute(project.mysqlJdbcUrl) { sql ->
		Map entries = [users.split(','), pass.split(',')].transpose().collectEntries()
		entries.each {
			sql.execute project."${db}CreateUser"(it.key, it.value)
			println "User ${it.key} with password ${it.value} has been created."
		}
	}
}

task removeUsers(dependsOn: loadDriver) << {
	execute(project.mysqlJdbcUrl) { sql ->
		users.split(',').each {
			sql.execute project."${db}DeleteUser"(it)
			println "User $it has been removed."
		}
	}
}

def execute(jdbcUrl, closure) {
	def sql = Sql.newInstance(jdbcUrl, admin, adminpass)
	closure(sql)
}

String mysqlCreateUser(user, password) {
	return "CREATE USER $user@$dburl IDENTIFIED BY '$password';"
}

String mysqlDeleteUser(user) {
	return "DROP USER $user@$dburl;"
}